version: "3.8"
services:
  gpu-worker:
    build:
      context: ..
      dockerfile: docker/worker.Dockerfile
    image: clippyfront-gpu-worker:latest
    environment:
      # Defaults if not provided in .env
      - USE_GPU_QUEUE=true
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://host.docker.internal:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://host.docker.internal:6379/0}
      - FFMPEG_BINARY=ffmpeg
      - YT_DLP_BINARY=yt-dlp
      - CELERY_CONCURRENCY=${CELERY_CONCURRENCY:-1}
      - CELERY_QUEUES=${CELERY_QUEUES:-gpu,celery}
      # Ensure the app uses the bind-mounted instance path inside the container
      - CLIPPY_INSTANCE_PATH=/app/instance
      # Fail fast if the mount isn't present/writable (recommended for workers)
      - REQUIRE_INSTANCE_MOUNT=${REQUIRE_INSTANCE_MOUNT:-1}
      # Keep temp files on the shared instance filesystem to avoid EXDEV on final save
      - TMPDIR=/app/instance/tmp
    volumes:
      # Mount the host instance/data root into the container. Configure HOST_INSTANCE_PATH
      # in your .env or shell to point to the same storage used by the web app.
      # Example: HOST_INSTANCE_PATH=/mnt/clippyfront
      - ${HOST_INSTANCE_PATH:-/mnt/clippyfront}:/app/instance
    # Prefer Compose's GPUs flag; falls back to deploy reservations on Swarm
    gpus: all
    # GPU passthrough (Docker Desktop + NVIDIA)
    # Note: On many setups, Compose ignores GPU reservations unless using Swarm.
    # If GPU is not detected, prefer plain `docker run --gpus all`.
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
